
Vagrant.configure(2) do |config|

config.vm.box = "ubuntu/xenial64"
config.vm.hostname = "testbox"
config.vm.network "private_network", ip: "192.168.2.114"
config.vm.synced_folder "../", "/sites/test"

config.vm.provider "virtualbox" do |vb|
    #vb.gui = true
    vb.name = "vagrant_devbox"
    vb.memory = 1024
    vb.cpus = 1
end

config.vm.provision "shell", inline: <<-SHELL

    export DEBIAN_FRONTEND=noninteractive
    #VFDIR="/sites/test/vagrant/files"
    VFDIR="/vagrant/files"
    VUSER="ubuntu"
    VGROUP="ubuntu"

    # install ssh keys
    echo Installing SSH keys ...

    if [ ! -d /home/${VUSER}/.ssh ]
    then
        mkdir /home/${VUSER}/.ssh
    fi

    cp ${VFDIR}/dot/ssh/id_rsa.pub /home/${VUSER}/.ssh/id_rsa.pub
    cp ${VFDIR}/dot/ssh/id_rsa /home/${VUSER}/.ssh/id_rsa
    chmod 400 /home/${VUSER}/.ssh/id_rsa
    chmod 444 /home/${VUSER}/.ssh/id_rsa.pub
    chown ${VUSER}:${VGROUP} /home/${VUSER}/.ssh/id_rsa /home/${VUSER}/.ssh/id_rsa.pub
    cat /home/${VUSER}/.ssh/id_rsa.pub >> /home/${VUSER}/.ssh/authorized_keys
    echo done

    apt -y update
    apt -y upgrade

    # php
    apt install -y php7.0

    apt install -y php7.0-curl
    apt install -y php7.0-intl
    apt install -y php7.0-mcrypt
    apt install -y php7.0-mbstring
    apt install -y php-mysql
    #apt install -y php-redis
    apt install -y php-xml
    apt install -y php-apcu
    apt install -y php-imagick
    apt install -y php-xdebug

    # nginx
    apt install -y nginx

    # mysql
    apt install -qq -y mysql-server

    # nodejs & npm

    #apt install -y nodejs
    #apt install -y nodejs-legacy
    #apt install -y npm

    curl -sL https://deb.nodesource.com/setup_6.x | sudo bash -
    apt install -y nodejs


    # tools
    apt install -y subversion
    apt install -y git
    apt install -y mc
    apt install -y golang-go

    # Run shell scripts
    echo
    echo "Executing shell scripts ..."
    ###for F in `ls -l ${VFDIR}/shell/*.sh|awk 'BEGIN{ORS=" "}{print $9}'`; do
    ###    echo $F
    ###    bash ${VFDIR}/shell/`basename $F`
    ###done
    echo done

    # Config for PHP-FPM pools
    echo Installing PHP-FPM pools ...

    for F in `ls -l ${VFDIR}/php/pool.d/*.conf|awk 'BEGIN{ORS=" "}{print $9}'`; do
        FNAME=`basename $F`
        echo "cp ${VFDIR}/php/pool.d/${FNAME} /etc/php5/fpm/pool.d/${FNAME}"
        cp ${VFDIR}/php/pool.d/${FNAME} /etc/php/7.0/fpm/pool.d/${FNAME}
    done

    echo done
    echo

    # Virtual hosts
    echo Installing virtual hosts ...

    for F in `ls -l ${VFDIR}/nginx/*.conf|awk 'BEGIN{ORS=" "}{print $9}'`; do
        FNAME=`basename $F`
        echo -n " ${FNAME}"
        cp ${VFDIR}/nginx/${FNAME} /etc/nginx/sites-available
        ln -s /etc/nginx/sites-available/${FNAME} /etc/nginx/sites-enabled/${FNAME}
    done

    echo done
    echo

    # run sql scripts to create users, databases, etc.
    echo
    echo "Executing SQL scripts ..."

    for F in `ls -l ${VFDIR}/mysql/*.sql | awk 'BEGIN{ORS=" "}{print $9}'`; do
        FNAME=`basename $F`
        echo "mysql < ${VFDIR}/mysql/${FNAME}"
        mysql < ${VFDIR}/mysql/${FNAME}
    done

    # run sql scripts for databases
    echo
    echo "Executing SQL scripts for databases ..."
    for D in `ls -l ${VFDIR}/mysql|grep '^d'|awk 'BEGIN{ORS=" "}{print $9}'`; do
        DBNAME=`basename $D`
        for F in `ls -l ${VFDIR}/mysql/${DBNAME}/*.sql|awk 'BEGIN{ORS=" "}{print $9}'`; do
            FNAME=`basename $F`
            echo "mysql $DBNAME < ${VFDIR}/mysql/${DBNAME}/${FNAME}"
            mysql $DBNAME < ${VFDIR}/mysql/${DBNAME}/${FNAME}
        done
    done

    echo done
    echo

    # Restart services
    echo
    echo -n "Restarting services ... "

    service php7.0-fpm restart
    service nginx restart
    service mysql restart

    echo done
    echo

    id
    echo All done.
SHELL

end
